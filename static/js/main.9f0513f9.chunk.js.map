{"version":3,"sources":["APIKey.js","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/layout/Spinner.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","id","Footer","href","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","style","color","this","name","placeholder","backgroundColor","Component","connect","state","loading","movies","dispatch","payload","axios","get","then","res","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Spinner","Landing","Movie","fetchMovie","match","params","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9f0513f9.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey: 'c951ff1'\r\n  };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-light  mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header\">\r\n            <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"/\">\r\n              Movie & Series Oil\r\n            </Link>\r\n          </div>\r\n          <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n            </li>\r\n           \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","\r\nimport React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n            Developed By: \r\n            <span className=\"text-warning font-weight-normal\">\r\n              Anjana Sinha\r\n            </span>\r\n            , Using <i className=\"fab fa-react\" /> React JS & Redux JS\r\n            integrated with external movies data API-\r\n            <a\r\n              href=\"http://www.omdbapi.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              OMDB\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","  \r\nimport { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\n\r\nimport { APIKey } from '../APIKey';\r\n\r\n\r\n\r\nexport const searchMovie = text => dispatch => {\r\n    dispatch({\r\n      type: SEARCH_MOVIE,\r\n      payload: text\r\n    });\r\n  };\r\n\r\n  export const fetchMovies = text => dispatch => {\r\n\r\n    axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then (res=> dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => console.log(err))\r\n  } ;\r\n\r\n\r\n\r\n  export const fetchMovie = id => dispatch =>{\r\n\r\n    axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then (res=> dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => console.log(err))\r\n  } ;\r\n\r\n  export const setLoading  = () => {\r\n      return {\r\n          type: LOADING\r\n      };\r\n  };","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n} from '../../actions/searchActions';\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n   \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" style={{color:\"#3282b8\"}}/> Search for a movie ,TV series ..\r\n          </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\"Type Movie or Series...\"\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn  btn-bg mt-3\" style={{backgroundColor:\"#3282b8\"}}>\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading,\r\n  text: state.movies.text\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchMovie, fetchMovies, setLoading }\r\n)(SearchForm);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body bg-dark text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n          <h5 className=\"text-light card-title\">\r\n            {movie.Title} - {movie.Year}\r\n          </h5>\r\n          <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n            More Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    console.log(movies);\r\n    let content = '';\r\n\r\n    content =\r\n      movies.Response === 'True'\r\n        ? movies.Search.map((movie, index) => (\r\n            <MovieCard key={index} movie={movie} />\r\n          ))\r\n        : <p style={{color:'white'}} >Type correct movie/series name</p>;\r\n    return <div className=\"row\">{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react'\r\n\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <p>Loading...</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","  \r\nimport React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport MoviesContainer from './MoviesContainer';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchForm />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\r\n\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Movie extends Component {\r\n\r\ncomponentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id)\r\n    this.props.setLoading();\r\n}\r\n \r\n  render() {\r\n    const { loading, movie } = this.props;\r\n   \r\n    return (\r\n    loading ? <Spinner/> :  \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 card card-body\">\r\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h2 className=\"mb-4\">{movie.Title}</h2>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"card card-body bg-dark my-5 text-light\">\r\n            <div className=\"col-md-12\">\r\n              <h3>About </h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                Go Back To Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    \r\n  }\r\n}\r\n\r\nconst mapStateToProps =state => ({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {fetchMovie, setLoading})\r\n(Movie);","import {\r\n    SEARCH_MOVIE,\r\n    FETCH_MOVIES,\r\n    FETCH_MOVIE,\r\n    LOADING\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SEARCH_MOVIE:\r\n        return {\r\n          ...state,\r\n          text: action.payload,\r\n          loading: false\r\n        };\r\n      case FETCH_MOVIES:\r\n        return {\r\n          ...state,\r\n          movies: action.payload,\r\n          loading: false\r\n        };\r\n      case FETCH_MOVIE:\r\n        return {\r\n          ...state,\r\n          movie: action.payload,\r\n          loading: false\r\n        };\r\n      case LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {combineReducers} from 'redux';\r\n\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies:searchReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer,initialState, composeWithDevTools\r\n(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store;","\n  \nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\n\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}